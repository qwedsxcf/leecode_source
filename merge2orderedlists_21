/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* p1=list1,* p2=list2,*res,*tail;
        if(list1==nullptr&&list2!=nullptr){
            res=list2;
        }
        else if(list1!=nullptr&&list2==nullptr){
            res=list1;
        }
        else if(list1==nullptr&&list2==nullptr){
            return nullptr;
        }
        else{
            if(p1->val<=p2->val){
                res=list1;
                tail=list1;
                p1=p1->next;
            }
            else{
                res=list2;
                tail=list2;
                p2=p2->next;
            }
            while(p1!=nullptr&&p2!=nullptr){
                if(p1->val<=p2->val){
                    tail->next=p1;
                    tail=tail->next;
                    p1=p1->next;
                }
                else{
                    tail->next=p2;
                    tail=tail->next;
                    p2=p2->next;
                }
            }
            if(p1!=nullptr&&p2==nullptr){
                tail->next=p1;
            }
            else if(p1==nullptr&&p2!=nullptr){
                tail->next=p2;
            }
        }
        return res;
    }
};
