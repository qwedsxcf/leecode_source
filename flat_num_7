class Solution {
public:
    int reverse(int x) {
        string str=to_string(x);
        string min="-2147483648";
        string max="2147483647";

        int len=str.size();
        string new_str="";
        int end_idx=0;
        if(x<0){
            new_str=new_str+"-";
            end_idx=1;
        }
        for(int i=len-1;i>=end_idx;i--){
            new_str=new_str+str[i];
        }
        //字符串已经反转完毕，现在检查反转之后的数字有没有超出界限，而且，只能在字符串空间中进行比较
        if(x<0){//x本身小于0，那么和min字符串进行比较
            //既然X大于等于min，那么反转之后的位数并不可能大于min
            if(new_str.size()==min.size()){
                for(int i=1;i<len;i++){
                    //cout<<stoi(new_str.substr(i,1))<<","<<stoi(min.substr(i,1))<<"  ";
                    if(stoi(new_str.substr(i,1))<stoi(min.substr(i,1))){
                        break;
                    }
                    else if(stoi(new_str.substr(i,1))>stoi(min.substr(i,1))){
                        return 0;
                    }
                }
                return stoi(new_str);
            }
            return stoi(new_str);
        }
        else{
            if(new_str.size()==max.size()){
                for(int i=0;i<len;i++){
                    //cout<<i<<" ";
                    if(stoi(new_str.substr(i,1))<stoi(max.substr(i,1))){
                        break;
                    }
                    else if(stoi(new_str.substr(i,1))>stoi(max.substr(i,1))){
                        return 0;
                    }
                }
                return stoi(new_str);
            }
            return stoi(new_str);
        }
        //cout<<new_str;
        //在字符串空间进行比较，看看有没有超过界限

        return stoi(new_str);
    }
};
